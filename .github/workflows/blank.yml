name: "vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:     ##pull request normally given to the branches which is locked, where commit canot be donr by npormal people
    branches:
      - main
    paths:
      - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "apply terraform code changes"
    runs-on: ubuntu-latest    ##basicaly git-hub actions create a container and carries the foolowing actions
    defaults:            ## deafulats allows the steps to be carried out on specified env.
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: "checkout the source code"
        uses: actions/checkout@v4

      - name: "setup terraform with the specified version on the runner"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: "terraform init"
        id: init             ##we can use id to refernce in the upcoming tasks
        run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}"

      - name: "terraform format checking"
        id: fmt
        run: terraform fmt -check   ## it will not corrects format, it just checks for the format, if the format is not cerreect it fails the work flow  

      - name: "terraform validation"
        id: validate
        run: terraform validate      ##checks for the syntax of the code 

      - name: "terraform plan"
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: "terraform status"
        if: steps.plan.outcome == 'failure'
        run: exit 1              ## this terminates the execution process 
